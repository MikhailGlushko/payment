<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.payment</groupId>
	<artifactId>router-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>router-service</name>
	<description>router service</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<docker.image.prefix>payment</docker.image.prefix>
	    <org.mapstruct.version>1.2.0.Final</org.mapstruct.version>		
	    <m2e.apt.activation>jdt_apt</m2e.apt.activation>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-activemq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.mapstruct/mapstruct-jdk8 -->
		<dependency>
		    <groupId>org.mapstruct</groupId>
		    <artifactId>mapstruct-jdk8</artifactId>
		    <version>${org.mapstruct.version}</version>
		</dependency>
		
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>	
        
        <dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>	
		
	    <dependency>
	      <groupId>org.springframework</groupId>
	      <artifactId>spring-oxm</artifactId>
	    </dependency>			

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
	        <plugin>
	            <groupId>org.codehaus.mojo</groupId>
	            <artifactId>jaxb2-maven-plugin</artifactId>
	            <version>1.6</version>
	            <executions>
	                <execution>
	                    <id>xjc</id>
	                    <goals>
	                        <goal>xjc</goal>
	                    </goals>
	                </execution>
	            </executions>
	            <configuration>
	            	<schemaDirectory>${project.basedir}/src/main/resources</schemaDirectory>
	            	<outputDirectory>${project.basedir}/src/main/java</outputDirectory>
	            	<clearOutputDir>false</clearOutputDir>
	            </configuration>
	        </plugin>	
	        
	        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.7.0</version>
            <configuration>
                <source>1.8</source>
                <target>1.8</target>
                <annotationProcessorPaths>
                    <path>
                        <groupId>org.mapstruct</groupId>
                        <artifactId>mapstruct-processor</artifactId>
                        <version>${org.mapstruct.version}</version>
                    </path>
                </annotationProcessorPaths>
            </configuration>
        </plugin>        		
			
	        <plugin>
	            <groupId>com.spotify</groupId>
	            <artifactId>dockerfile-maven-plugin</artifactId>
	            <version>1.3.6</version>
	            <configuration>
	                <repository>${docker.image.prefix}/${project.artifactId}</repository>
	                <buildArgs>
	                    <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
	                </buildArgs>
	            </configuration>
	        </plugin>
        			
		</plugins>
	</build>


</project>
